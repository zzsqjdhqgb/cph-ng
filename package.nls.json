{
    "cph-ng.commands.addTestCase": "CPH-NG: Add Test Case",
    "cph-ng.commands.createProblem": "CPH-NG: Create Problem",
    "cph-ng.commands.deleteProblem": "CPH-NG: Delete Problem",
    "cph-ng.commands.exportToEmbedded": "CPH-NG: Export to Embedded",
    "cph-ng.commands.importProblem": "CPH-NG: Import Problem",
    "cph-ng.commands.loadTestCases": "CPH-NG: Load Test Cases",
    "cph-ng.commands.runTestCases": "CPH-NG: Run Test Cases",
    "cph-ng.commands.stopTestCases": "CPH-NG: Stop Test Cases",
    "cph-ng.commands.submitToCodeforces": "CPH-NG: Submit to Codeforces",
    "cph-ng.configuration.basic.properties.folderOpener.enumDescriptions.flat": "Display a flat list of all subfolders in the workspace using a quick pick menu.",
    "cph-ng.configuration.basic.properties.folderOpener.enumDescriptions.tree": "Display a tree view of all subfolders in the workspace using the built-in VSCode folder picker.",
    "cph-ng.configuration.basic.properties.folderOpener.markdownDescription": "Choose the method to choose folders in VSCode.",
    "cph-ng.configuration.basic.title": "Basic",
    "cph-ng.configuration.bfCompare.properties.bruteForceTimeLimit.markdownDescription": "Set the **time limit** for the brute force run (in **milliseconds**). If the brute force does not complete within this time, it will be terminated. This helps prevent the brute force from running too long and affecting overall performance.",
    "cph-ng.configuration.bfCompare.properties.generatorTimeLimit.markdownDescription": "Set the **time limit** for the generator run (in **milliseconds**). If the generator does not complete within this time, it will be terminated. This helps prevent the generator from running too long and affecting overall performance.",
    "cph-ng.configuration.bfCompare.title": "Brute Force Compare",
    "cph-ng.configuration.cache.properties.cleanOnStartup.markdownDescription": "When enabled, the **cache directory will be automatically cleared** every time the extension starts up. This helps ensure you're always working with fresh data and prevents the accumulation of old files, which can consume disk space.",
    "cph-ng.configuration.cache.properties.directory.markdownDescription": "Specify the **cache directory** for storing compiled files and other temporary data generated by the extension. You can use the following placeholders:\n- `${tmp}`: Represents the system's default temporary folder.\n- `${home}`: Represents the user's home directory.\n\nEnsure this directory has appropriate write permissions.",
    "cph-ng.configuration.cache.title": "Cache",
    "cph-ng.configuration.companion.properties.addTimestamp.markdownDescription": "When enabled, a **timestamp comment** will be appended to the end of your source code upon submission. This comment indicates the exact date and time of submission, which can be useful for tracking and record-keeping purposes.",
    "cph-ng.configuration.companion.properties.chooseSaveFolder.markdownDescription": "Whether to prompt for a folder to save the problem source file when importing a problem via Competitive Companion. If disabled, the first workspace folder will be used.",
    "cph-ng.configuration.companion.properties.listenPort.markdownDescription": "Set the **listening port** for the Competitive Companion server. This port is used for communication between the extension and external tools like browser extensions that automatically fetch problem data. Ensure this port is not blocked by a firewall.",
    "cph-ng.configuration.companion.properties.submitLanguage.enumDescriptions.-1": "Please select",
    "cph-ng.configuration.companion.properties.submitLanguage.enumDescriptions.54": "GNU G++17 7.3.0",
    "cph-ng.configuration.companion.properties.submitLanguage.enumDescriptions.89": "GNU G++20 13.2 (64 bit, winlibs)",
    "cph-ng.configuration.companion.properties.submitLanguage.enumDescriptions.91": "GNU G++23 14.2 (64 bit, msys2)",
    "cph-ng.configuration.companion.properties.submitLanguage.markdownDescription": "Set the **default programming language** for submissions when using the Competitive Companion integration. This should correspond to the language ID used by your competitive programming platform (e.g., Codeforces). This setting helps streamline the submission process by pre-selecting your preferred language.",
    "cph-ng.configuration.companion.title": "Companion",
    "cph-ng.configuration.comparing.properties.ignoreError.markdownDescription": "When enabled, output to stderr will be ignored during comparison, treating any errors as if they were not present. This can help avoid false negatives in cases where the program outputs error messages that do not affect the correctness of the solution.",
    "cph-ng.configuration.comparing.properties.oleSize.markdownDescription": "This **multiplier** determines if the program's output is excessively long compared to the expected answer. If the answer's length is `oleSize` times greater than the program's output, the output will be considered too long (Output Limit Exceeded - OLE) and won't be compared. Set to `0` to disable this check entirely. This helps to prevent comparing extremely large outputs that might indicate an infinite loop or incorrect logic.",
    "cph-ng.configuration.comparing.properties.regardPEAsAC.markdownDescription": "When enabled, a **'Presentation Error' (PE)** result will be automatically treated as an **'Accepted' (AC)** result during comparison. This can be useful for competitive programming platforms where minor formatting differences (e.g., extra spaces or newlines) are often ignored.",
    "cph-ng.configuration.comparing.title": "Comparing",
    "cph-ng.configuration.compilation.properties.cArgs.markdownDescription": "Define the **command-line arguments** passed to the C compiler. These typically include optimization flags (e.g., `-O2`), C standard versions (e.g., `-std=c11`), and warning settings (e.g., `-Wall`). For more on compiler arguments, consult your compiler's documentation.",
    "cph-ng.configuration.compilation.properties.cCompiler.markdownDescription": "Specify the **C compiler** to use for compilation (e.g., `gcc`, `clang`). This setting determines the executable used to compile your C source code.",
    "cph-ng.configuration.compilation.properties.cppArgs.markdownDescription": "Define the **command-line arguments** passed to the C++ compiler. These typically include optimization flags (e.g., `-O2`), C++ standard versions (e.g., `-std=c++14`), and warning settings (e.g., `-Wall`). For more on compiler arguments, consult your compiler's documentation.",
    "cph-ng.configuration.compilation.properties.cppCompiler.markdownDescription": "Specify the **C++ compiler** to use for compilation (e.g., `g++`, `clang++`). This setting determines the executable used to compile your C++ source code.",
    "cph-ng.configuration.compilation.properties.objcopy.markdownDescription": "Specify the **objcopy** utility to use for manipulating object files. This is often used in advanced build processes for tasks like extracting sections or converting formats.",
    "cph-ng.configuration.compilation.properties.timeout.markdownDescription": "Set the maximum time (in **milliseconds**) allowed for the compilation process before it's terminated. A value of `0` disables the timeout, allowing compilation to run indefinitely. This can prevent hung processes.",
    "cph-ng.configuration.compilation.properties.useHook.markdownDescription": "**Only available when `useWrapper` is enabled.** When enabled, a hook will be compiled and linked with the program to prevent file IO.",
    "cph-ng.configuration.compilation.properties.useWrapper.markdownDescription": "When enabled, the program will be executed within a wrapper script to provide a more accurate time measurement and memory usage tracking.",
    "cph-ng.configuration.compilation.title": "Compilation",
    "cph-ng.configuration.cphCapable.properties.enabled.markdownDescription": "Enable **import of problem data** from Competitive Programming Helper (CPH) to CPH-NG. This streamlines the process of getting problem definitions and test cases into the extension, reducing manual setup.",
    "cph-ng.configuration.cphCapable.title": "CPH Capable",
    "cph-ng.configuration.problem.properties.clearBeforeLoad.markdownDescription": "Specify whether to clear the current test cases before loading new ones from a zip file or folder.",
    "cph-ng.configuration.problem.properties.defaultTimeLimit.markdownDescription": "Set the **default time limit** (in **milliseconds**) that will be applied to newly created problems within the extension. This value is used if no specific time limit is provided for a problem, ensuring a baseline for execution.",
    "cph-ng.configuration.problem.properties.deleteAfterUnzip.markdownDescription": "Specify whether to delete the zip file after unzipping.",
    "cph-ng.configuration.problem.properties.foundMatchTestCaseBehavior.enumDescriptions.always": "Automatically use the found file without prompting.",
    "cph-ng.configuration.problem.properties.foundMatchTestCaseBehavior.enumDescriptions.ask": "Prompt the user to confirm whether to use the found file.",
    "cph-ng.configuration.problem.properties.foundMatchTestCaseBehavior.enumDescriptions.never": "Ignore any found files and do not use them.",
    "cph-ng.configuration.problem.properties.foundMatchTestCaseBehavior.markdownDescription": "Determine the behavior when a matching test case file is found during problem setup. Options include:\n- `ask`: Prompt the user to confirm whether to use the found file.\n- `always`: Automatically use the found file without prompting.\n- `never`: Ignore any found files and do not use them.",
    "cph-ng.configuration.problem.properties.problemFilePath.markdownDescription": "Specify the **problem file path** for the competitive programming problem. This is the location where the problem definition and test cases are stored.\nYou can use the following placeholders:\n- `${workspace}`: The path to the workspace folder.\n- `${tmp}`: The path to the temporary directory.\n- `${home}`: The path to the user's home directory.\n- `${dirname}`: The directory name of the source file.\n-`${relativeDirname}`: The directory name of the source file relative to the workspace folder.\n- `${basename}`: The base name of the source file.\n- `${extname}`: The extension name of the source file.\n- `${basenameNoExt}`: The base name of the source file without the extension.",
    "cph-ng.configuration.problem.properties.templateFile.markdownDescription": "Specify the **template file** to use when creating new problems. This file can contain placeholders for problem details, which will be replaced with actual values when a new problem is created. This allows for consistent formatting and structure across problems.\nThe placeholders includes:\n- `${title}`: The title of the problem.\n- `${timeLimit}`: The time limit for the problem in milliseconds.\n- `${url}`: The URL of the problem.",
    "cph-ng.configuration.problem.properties.unzipFolder.markdownDescription": "Specify the **unzip folder** for the competitive programming problem. This is the location where the problem files will be extracted.\nYou can use the following placeholders:\n- `${workspace}`: The path to the workspace folder.\n- `${tmp}`: The path to the temporary directory.\n- `${home}`: The path to the user's home directory.\n- `${dirname}`: The directory name of the source file.\n-`${relativeDirname}`: The directory name of the source file relative to the workspace folder.\n- `${basename}`: The base name of the source file.\n- `${extname}`: The extension name of the source file.\n- `${basenameNoExt}`: The base name of the source file without the extension.\n- `${zipDirname}`: The directory name of the zip file.\n- `${zipBasename}`: The base name of the zip file.\n- `${zipBasenameNoExt}`: The base name of the zip file without the extension.",
    "cph-ng.configuration.problem.title": "Problem",
    "cph-ng.configuration.runner.properties.stderrThreshold.markdownDescription": "Sets the threshold (in **bytes**) for writing stderr to a file. If the stderr output size exceeds this threshold, it will be redirected to a file to prevent performance issues with large outputs. Set to `0` to always write stderr to a file, or `-1` to disable writing to a file entirely.",
    "cph-ng.configuration.runner.properties.timeAddition.markdownDescription": "Add extra time (in **milliseconds**) to the time limit of each test case during execution. For instance, if a test case has a `1000ms` time limit and this value is `1000ms`, your program will be allowed to run for `2000ms` before being killed. This can be useful for accommodating slight overheads or system variances.",
    "cph-ng.configuration.runner.title": "Runner",
    "cph-ng.configuration.sidebar.properties.colorTheme.enumDescriptions.auto": "Automatically match the VSCode color theme.",
    "cph-ng.configuration.sidebar.properties.colorTheme.enumDescriptions.dark": "Always use the dark mode, regardless of the VSCode theme.",
    "cph-ng.configuration.sidebar.properties.colorTheme.enumDescriptions.light": "Always use the light mode, regardless of the VSCode theme.",
    "cph-ng.configuration.sidebar.properties.colorTheme.markdownDescription": "Select the **color theme** for the sidebar. This affects the visual appearance of elements within the sidebar view. Choose from the following options:",
    "cph-ng.configuration.sidebar.properties.fontFamily.markdownDescription": "Set the **font family** for test cases text in the sidebar. You can specify multiple fonts as a fallback list, separated by commas. The first available font on the user's system will be used. For example: `Monaspace, 'Cascadia Code', 'Source Code Pro', Consolas, 'Ubuntu Mono', monospace`. This allows you to customize the appearance of text to your preference.",
    "cph-ng.configuration.sidebar.properties.hiddenStatuses.markdownDescription": "Choose which **submission statuses** to hide from the sidebar view. Select one or more statuses from the list to filter them out and focus on specific results, reducing visual clutter. For example, you might hide 'Accepted' results to only see pending or failed submissions.",
    "cph-ng.configuration.sidebar.properties.retainWhenHidden.markdownDescription": "If `true`, the sidebar view will **remain active and retain its state** even when it's hidden. If `false`, the sidebar will be disposed of when hidden and recreated when shown again, which might impact performance or cause a brief visual flicker. Consider your workflow and system resources when setting this.",
    "cph-ng.configuration.sidebar.properties.showAcGif.markdownDescription": "When enabled, a **congratulatory GIF** will be displayed in the sidebar whenever a problem is successfully accepted (receives an 'Accepted' verdict). This provides visual feedback for successful submissions.",
    "cph-ng.configuration.sidebar.properties.showTips.markdownDescription": "When enabled, a **random tip** will be displayed when there is no problem.",
    "cph-ng.configuration.sidebar.title": "Sidebar",
    "cph-ng.sidebar.hiddenStatuses.enumDescriptions.AC": "Accepted",
    "cph-ng.sidebar.hiddenStatuses.enumDescriptions.CE": "Compilation Error",
    "cph-ng.sidebar.hiddenStatuses.enumDescriptions.CMP": "Comparing",
    "cph-ng.sidebar.hiddenStatuses.enumDescriptions.CP": "Compiling",
    "cph-ng.sidebar.hiddenStatuses.enumDescriptions.CPD": "Compiled",
    "cph-ng.sidebar.hiddenStatuses.enumDescriptions.FC": "Fetched",
    "cph-ng.sidebar.hiddenStatuses.enumDescriptions.JG": "Judging",
    "cph-ng.sidebar.hiddenStatuses.enumDescriptions.JGD": "Judged",
    "cph-ng.sidebar.hiddenStatuses.enumDescriptions.MLE": "Memory Limit Exceeded",
    "cph-ng.sidebar.hiddenStatuses.enumDescriptions.OLE": "Output Limit Exceeded",
    "cph-ng.sidebar.hiddenStatuses.enumDescriptions.PC": "Partially Correct",
    "cph-ng.sidebar.hiddenStatuses.enumDescriptions.PE": "Presentation Error",
    "cph-ng.sidebar.hiddenStatuses.enumDescriptions.RE": "Runtime Error",
    "cph-ng.sidebar.hiddenStatuses.enumDescriptions.RF": "Restricted Function",
    "cph-ng.sidebar.hiddenStatuses.enumDescriptions.RJ": "Rejected",
    "cph-ng.sidebar.hiddenStatuses.enumDescriptions.SE": "System Error",
    "cph-ng.sidebar.hiddenStatuses.enumDescriptions.SK": "Skipped",
    "cph-ng.sidebar.hiddenStatuses.enumDescriptions.TLE": "Time Limit Exceeded",
    "cph-ng.sidebar.hiddenStatuses.enumDescriptions.UKE": "Unknown Error",
    "cph-ng.sidebar.hiddenStatuses.enumDescriptions.WA": "Wrong Answer",
    "cph-ng.sidebar.hiddenStatuses.enumDescriptions.WT": "Waiting",
    "cph-ng.views.cphNgContainer.name": "Problem",
    "cph-ng.viewsContainers.activitybar.title": "CPH-NG"
}
